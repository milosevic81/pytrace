name: Test Pytrace
on:
  workflow_dispatch:
  workflow_call:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]

jobs:

  test-pytrace:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: pytrace
    steps:
        - uses: actions/checkout@v4

        - uses: actions/setup-python@v5
          with:
            python-version: '3.10'

        - name: Cache Python dependencies
          uses: actions/cache@v3
          with:
            path: ~/.cache/pip
            key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
            restore-keys: |
              ${{ runner.os }}-pip-

        - name: Install dependencies
          run: |
            python3 -m venv venv
            source venv/bin/activate
            pip install -r src/requirements.txt
            pip install -r test/requirements.txt

        - name: Run tests and code coverage
          run: |
            source venv/bin/activate
            pytest \
                --junitxml=pytest.xml -o junit_family=legacy \
                --cov-report=xml \
                --cov=src
                
        - name: Upload coverage reports to Codecov
          uses: codecov/codecov-action@v5
          with:
            token: ${{ secrets.CODECOV_TOKEN }}

        - name: Upload test results to Codecov
          if: ${{ !cancelled() }}
          uses: codecov/test-results-action@v1
          with:
            token: ${{ secrets.CODECOV_TOKEN }}

  test-rust-tracer:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: rust-tracer
    env:
      CARGO_TERM_COLOR: always
    steps:
    - uses: actions/checkout@v4

    - uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true

    - name: Build
      run: cargo build --verbose

    - name: Run tests
      run: cargo test --verbose


  test-cpp-tracer:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: cpp-trace
    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtest-dev
        sudo apt-get install -y cmake
        sudo apt-get install -y libboost-all-dev

    - name: Build
      run: |        
        # cmake -B build
        cmake -DCODE_COVERAGE=ON -DCMAKE_BUILD_TYPE=Debug -B build
        cmake --build build --config Debug 


    - name: Run tests
      run: |
        ctest --test-dir build --verbose

    - name: Generate coverage report
      run: |
        export OPTIONS=" --output-file coverage.info --ignore-errors inconsistent --ignore-errors range --ignore-errors unused"
        # Capture coverage data
        lcov --directory build --capture --output-file coverage.info --ignore-errors inconsistent --ignore-errors range --ignore-errors unused
        # Remove coverage for unwanted files
        lcov --remove coverage.info '/usr/*' "${HOME}"'/.cache/*' --output-file coverage.info --ignore-errors inconsistent --ignore-errors range --ignore-errors unused
        # Filter coverage to include only 'src' directory
        lcov --extract coverage.info '**/src/*' --output-file coverage.info --ignore-errors inconsistent --ignore-errors range --ignore-errors unused
        # Display the coverage report
        lcov --list coverage.info

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        files: coverage.info
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Upload test results to Codecov
      if: ${{ !cancelled() }}
      uses: codecov/test-results-action@v1
      with:
        files: cpp-trace/build/report.xml
        token: ${{ secrets.CODECOV_TOKEN }}
