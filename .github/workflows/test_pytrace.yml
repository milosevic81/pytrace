name: Test Pytrace
on:
  workflow_dispatch:
  workflow_call:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]

jobs:

  test-pytrace:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: pytrace
    steps:
        - uses: actions/checkout@v4

        - uses: actions/setup-python@v5
          with:
            python-version: '3.10'

        - name: Cache Python dependencies
          uses: actions/cache@v3
          with:
            path: ~/.cache/pip
            key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
            restore-keys: |
              ${{ runner.os }}-pip-

        - name: Install dependencies
          run: |
            python3 -m venv venv
            source venv/bin/activate
            pip install -r src/requirements.txt
            pip install -r test/requirements.txt

        - name: Run tests and code coverage
          run: |
            source venv/bin/activate
            pytest \
                --junitxml=pytest.xml -o junit_family=legacy \
                --cov-report=xml \
                --cov=src
                
        - name: Upload coverage reports to Codecov
          uses: codecov/codecov-action@v5
          with:
            token: ${{ secrets.CODECOV_TOKEN }}

        - name: Upload test results to Codecov
          if: ${{ !cancelled() }}
          uses: codecov/test-results-action@v1
          with:
            token: ${{ secrets.CODECOV_TOKEN }}

  test-rust-tracer:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: rust-tracer
    steps:
        - uses: actions/checkout@v4
       
        - name: Install latest nightly
          uses: actions-rs/toolchain@v1
          with:
              toolchain: stable
              override: true

        - name: Cache Cargo registry
          uses: actions/cache@v3
          with:
            path: |
              ~/.cargo/registry
              ~/.cargo/bin
            key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
            restore-keys: |
              ${{ runner.os }}-cargo-

        - name: Install dependencies
          run: cargo fetch

        - name: Install cargo-nextest and cargo-tarpaulin
          run: |
            cargo install cargo-nextest
            cargo install cargo-tarpaulin

        - name: Run tests and generate test report
          run: |
            cargo nextest run --output-format junit > test-results.xml

        - name: Run tests with coverage
          run: |
            cargo tarpaulin --out Xml --output coverage.xml
                
        - name: Upload coverage to Codecov
          uses: codecov/codecov-action@v5
          with:
            files: coverage.xml
            token: ${{ secrets.CODECOV_TOKEN }}

        - name: Upload test results to Codecov
          if: ${{ !cancelled() }}
          uses: codecov/test-results-action@v1
          with:
            files: test-results.xml
            token: ${{ secrets.CODECOV_TOKEN }}